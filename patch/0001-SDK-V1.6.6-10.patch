From 14c88df7723d27dfc7444e2852e466af6b5f987d Mon Sep 17 00:00:00 2001
From: shijguo <18154764542@163.com>
Date: Sat, 22 Jan 2022 10:36:16 +0800
Subject: [PATCH] =?UTF-8?q?=E5=AE=89=E4=BF=A1=E5=8F=AF=E9=80=9A=E7=94=A8SD?=
 =?UTF-8?q?K=20V1.6.6-10?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
     Living_SDK/kernel/init/aos_init.c             |   3 +-
     .../platform/mcu/tg7100c/aos/aos_main.c       |  16 ++-
     .../platform/mcu/tg7100c/aos/aos_main.h       |   2 +-
     .../platform/mcu/tg7100c/aos/soc_init.c       |   2 +-
     .../tg7100c/hal_drv/tg7100c_hal/bl_efuse.c    | 101 ++++++++++++++++++
     .../tg7100c/hal_drv/tg7100c_hal/bl_efuse.h    |   4 +
     .../tg7100c/hal_drv/tg7100c_hal/bl_flash.c    |  50 +++++++++
     .../tg7100c/hal_drv/tg7100c_hal/bl_flash.h    |  13 +++
     .../tg7100c/hal_drv/tg7100c_hal/hal_board.c   | 100 ++++++++---------
     Living_SDK/tools/cli/cli.c                    |   4 +-
 Products/example/smart_outlet/vendor.c        |  11 +-
 README.md                                     |  31 ++++++
     tools/tg7100cevb.sh                           |   2 +
 13 files changed, 279 insertions(+), 60 deletions(-)

diff --git a/Living_SDK/kernel/init/aos_init.c b/Living_SDK/kernel/init/aos_init.c
index 8966c32e..314fe8af 100755
--- a/Living_SDK/kernel/init/aos_init.c
+++ b/Living_SDK/kernel/init/aos_init.c
@@ -20,6 +20,7 @@
 #include "lwip/apps/tftp.h"
 #endif /* CONFIG_NET_LWIP */
 
+extern void set_get_thrid(void);
 extern int vfs_init(void);
 extern int vfs_device_init(void);
 extern int aos_kv_init(void);
@@ -310,7 +311,7 @@ int aos_kernel_init(kinit_t *kinit)
     gps_init();
 #endif
 
-
+    set_get_thrid();
     // auto_component generated by the compiler system, now gcc support
 #if defined (__GNUC__) && !defined (__CC_ARM)
     //aos_components_init();
diff --git a/Living_SDK/platform/mcu/tg7100c/aos/aos_main.c b/Living_SDK/platform/mcu/tg7100c/aos/aos_main.c
index 6e62f795..ad053da9 100644
--- a/Living_SDK/platform/mcu/tg7100c/aos/aos_main.c
+++ b/Living_SDK/platform/mcu/tg7100c/aos/aos_main.c
@@ -357,7 +357,7 @@ static void cmd_uart1_send(char *pcWriteBuffer, int xWriteBufferLen, int argc, c
     static int g_uart_init_flag = 0;
     if (!g_uart_init_flag)
     {
-        uart1_rbuf_init(2000000);
+        uart1_rbuf_init(921600);
         g_uart_init_flag = 1;
     }
     
@@ -392,6 +392,16 @@ struct cli_command cmd[] = {
 #endif
 };
 
+#include "bl_flash.h"
+struct cli_command thrid_cmd[] = {
+    { "AT+LINKKEYCONFIG",            "set linkkit keys. linkkey [devid] [<Product Key> <Device Name> <Device Secret> <Product Secret>]", handle_set_linkkey_cmd},
+    { "AT+LINKKEYCONFIG?",           "get linkkit keys. linkkey [devid] [<Product Key> <Device Name> <Device Secret> <Product Secret>]", handle_get_linkkey_cmd},
+};
+void set_get_thrid(void)
+{
+    //注册set、get三元组指令
+    aos_cli_register_commands(thrid_cmd, sizeof(thrid_cmd)/sizeof(thrid_cmd[0]));
+}
 void trace_start(void)
 {
 #ifdef EN_COMBO_HAL_TEST
@@ -403,7 +413,7 @@ void trace_start(void)
 
 static void app_loop_entry(void *arg)
 {
-    uart0_rbuf_init(2000000);
+    uart0_rbuf_init(115200);
     hal_wifi_init();
     aos_kernel_init(&kinit);
 }
@@ -440,7 +450,7 @@ void bfl_main(void)
 
   bl_sys_early_init();
   /*Init UART In the first place*/
-  bl_uart_init(0, 16, 7, 255, 255, 2 * 1000 * 1000);
+  bl_uart_init(0, 16, 7, 255, 255, 115200);
 
   bl_irq_init();
 
diff --git a/Living_SDK/platform/mcu/tg7100c/aos/aos_main.h b/Living_SDK/platform/mcu/tg7100c/aos/aos_main.h
index dcbde244..98261ba9 100644
--- a/Living_SDK/platform/mcu/tg7100c/aos/aos_main.h
+++ b/Living_SDK/platform/mcu/tg7100c/aos/aos_main.h
@@ -5,7 +5,7 @@
 #ifndef AOS_MAIN_H
 #define AOS_MAIN_H
 
-
+void set_get_thrid(void);
 void main(void);
 
 #endif /* AOS_MAIN_H */
diff --git a/Living_SDK/platform/mcu/tg7100c/aos/soc_init.c b/Living_SDK/platform/mcu/tg7100c/aos/soc_init.c
index c36ce3a7..a4095291 100644
--- a/Living_SDK/platform/mcu/tg7100c/aos/soc_init.c
+++ b/Living_SDK/platform/mcu/tg7100c/aos/soc_init.c
@@ -129,7 +129,7 @@ void uart0_rbuf_init(uint32_t baud_rate)
 
 void uart1_rbuf_init(uint32_t baud_rate)
 {
-    uint8_t pins[] = {4, 2}; // {tx_pin, rx_pin}
+    uint8_t pins[] = {21, 12}; // {tx_pin, rx_pin}
 
     uart_1.port = UART1_ID;
     uart_1.config.baud_rate = baud_rate;
diff --git a/Living_SDK/platform/mcu/tg7100c/hal_drv/tg7100c_hal/bl_efuse.c b/Living_SDK/platform/mcu/tg7100c/hal_drv/tg7100c_hal/bl_efuse.c
index f9cdd001..bd16b64b 100644
--- a/Living_SDK/platform/mcu/tg7100c/hal_drv/tg7100c_hal/bl_efuse.c
+++ b/Living_SDK/platform/mcu/tg7100c/hal_drv/tg7100c_hal/bl_efuse.c
@@ -87,3 +87,104 @@ int bl_efuse_read_mac_opt(uint8_t slot, uint8_t mac[6], uint8_t reload)
 
     return 0;
 }
+
+
+#include "regex.h"
+#include "iot_export.h"
+#include "bl_flash.h"
+static int is_valid_mac(char *mac)
+{
+    if(strlen(mac) != 12){
+        printf("not valied MAC\r\n");
+        return -1;
+    }
+    char *p = mac;
+    while(*p != '\0')
+    {
+        if(*p < '0' || *p > 'f'){
+            return -1;
+        }
+        if(*p >= '0' && *p <= '9')        {}
+        else if(*p >= 'A' && *p <= 'F')   {}
+        else if(*p >= 'a' && *p <= 'f')   {}
+        else{
+            return -1;
+        }
+        p++;
+    }
+    return 0;
+}
+/*************************************************
+Function: 		StringToHex
+Description: 	字符串转HEX字符串
+Input: 			pAscStr:原字符数组
+                len:字符串长度
+Output: 		pHexStr:输出的字符串              
+Return: 		Hex字符串长度
+*************************************************/
+static int StringToHex(const char *pAscStr,unsigned char *pHexStr,int Len)
+{
+    int i = 0;
+    int j = 0;
+    if(Len % 2==0){
+    }
+    for(i=0;i<Len;i++)
+    {
+        if( ( pAscStr[i] >= '0' ) && ( pAscStr[i] <= '9' ) ){
+            pHexStr[j] =  pAscStr[i] - '0';
+        }
+        else if( ( pAscStr[i] >= 'A' ) && ( pAscStr[i] <= 'F' ) ){
+            pHexStr[j] = pAscStr[i] - '7';
+        }
+        else if( ( pAscStr[i] >= 'a' ) && ( pAscStr[i] <= 'f' ) ){
+            pHexStr[j] = pAscStr[i] - 0x57;
+        }
+        else{
+            pHexStr[j] = 0xff;
+            return 0;
+        }
+        i++;
+        if(i>=Len){
+            return j+1;
+        }
+        if( ( pAscStr[i] >= '0' ) && ( pAscStr[i] <= '9' ) ){
+            pHexStr[j] =pHexStr[j]*0x10+  pAscStr[i] - '0';
+            // printf("%x\n",pHexStr[j]);
+        }
+        else if( ( pAscStr[i] >= 'A' ) && ( pAscStr[i] <= 'F' ) ){
+            pHexStr[j] =pHexStr[j]*0x10+  pAscStr[i] - '7';
+            // printf("%x\n",pHexStr[j]);
+        }
+        else if( ( pAscStr[i] >= 'a' ) && ( pAscStr[i] <= 'f' ) ){
+            pHexStr[j] = pHexStr[j]*0x10+ pAscStr[i] - 0x57;
+            // printf("%x\n",pHexStr[j]);
+        }
+        else{
+            pHexStr[j] = 0xff;
+            printf("%x\n",pHexStr[j]);
+            return 0;
+        }
+        j++;
+        
+    }
+    
+    return j;
+}
+char* bl_flash_efuse_read_mac(uint8_t mac[6])
+{
+    char device_name[DEVICE_NAME_LEN + 1] = { 0 };
+    int len = DEVICE_NAME_LEN + 1;
+    aos_kv_get(KV_KEY_DN, device_name, &len);
+    printf("read devicename is %s\n",device_name);
+    int ret = is_valid_mac(device_name);
+    
+    if( ret == 0){      //flash MAC有效
+        StringToHex(device_name, mac, sizeof(device_name));
+        printf("Flash MAC :%02X:%02X:%02X:%02X:%02X:%02X\n",mac[0],mac[1],mac[2],mac[3],mac[4],mac[5]);
+    }
+    else if(ret == -1){ //flash MAC无效，使用Efuse MAC
+        bl_efuse_read_mac_factory(mac);
+        printf("Efuse MAC:%02X:%02X:%02X:%02X:%02X:%02X\n",mac[0],mac[1],mac[2],mac[3],mac[4],mac[5]);
+    }
+    return device_name;
+}
\ No newline at end of file
diff --git a/Living_SDK/platform/mcu/tg7100c/hal_drv/tg7100c_hal/bl_efuse.h b/Living_SDK/platform/mcu/tg7100c/hal_drv/tg7100c_hal/bl_efuse.h
index 662eb4d1..b0c54b83 100644
--- a/Living_SDK/platform/mcu/tg7100c/hal_drv/tg7100c_hal/bl_efuse.h
+++ b/Living_SDK/platform/mcu/tg7100c/hal_drv/tg7100c_hal/bl_efuse.h
@@ -5,4 +5,8 @@ int bl_efuse_read_mac(uint8_t mac[6]);
 int bl_efuse_read_mac_factory(uint8_t mac[6]);
 int bl_efuse_read_capcode(uint8_t *capcode);
 int bl_efuse_read_pwroft(int8_t poweroffset[14]);
+
+//先检查flash中的MAC是否有效，有效则使用flash中的MAC,若无效则使用EFUSE中的MAC
+char* bl_flash_efuse_read_mac(uint8_t mac[6]);
+
 #endif
diff --git a/Living_SDK/platform/mcu/tg7100c/hal_drv/tg7100c_hal/bl_flash.c b/Living_SDK/platform/mcu/tg7100c/hal_drv/tg7100c_hal/bl_flash.c
index b1da4c66..a26a1d28 100644
--- a/Living_SDK/platform/mcu/tg7100c/hal_drv/tg7100c_hal/bl_flash.c
+++ b/Living_SDK/platform/mcu/tg7100c/hal_drv/tg7100c_hal/bl_flash.c
@@ -412,3 +412,53 @@ int bl_flash_read_byxip(uint32_t addr, uint8_t *dst, int len)
     return 0;
 }
 
+
+#include <aos/aos.h>
+#include "iot_export.h"
+//设置三元组到flash
+void handle_set_linkkey_cmd(char *pwbuf, int blen, int argc, char **argv)
+{
+    if (argc == 5 || argc == 6) {
+        aos_kv_set(KV_KEY_PK, argv[1], strlen(argv[1]) + 1, 1);
+        aos_kv_set(KV_KEY_DN, argv[2], strlen(argv[2]) + 1, 1);
+        aos_kv_set(KV_KEY_DS, argv[3], strlen(argv[3]) + 1, 1);
+        aos_kv_set(KV_KEY_PS, argv[4], strlen(argv[4]) + 1, 1);
+        if (argc == 6)
+            aos_kv_set(KV_KEY_PD, argv[5], strlen(argv[5]) + 1, 1);
+        aos_uart_send("OK", strlen("OK"), 0);
+    } else {
+        aos_uart_send("ERROR", strlen("ERROR"), 0);
+        return;
+    }
+}
+//从flash获取三元组
+void handle_get_linkkey_cmd(char *pwbuf, int blen, int argc, char **argv)
+{
+    int len = 0;
+    char product_key[PRODUCT_KEY_LEN + 1] = { 0 };
+    char product_secret[PRODUCT_SECRET_LEN + 1] = { 0 };
+    char device_name[DEVICE_NAME_LEN + 1] = { 0 };
+    char device_secret[DEVICE_SECRET_LEN + 1] = { 0 };
+    char pidStr[9] = { 0 };
+    char buf[255] = {0};
+    len = PRODUCT_KEY_LEN + 1;
+    aos_kv_get(KV_KEY_PK, product_key, &len);
+    
+    len = PRODUCT_SECRET_LEN + 1;
+    aos_kv_get(KV_KEY_PS, product_secret, &len);
+    len = DEVICE_NAME_LEN + 1;
+    aos_kv_get(KV_KEY_DN, device_name, &len);
+    len = DEVICE_SECRET_LEN + 1;
+    aos_kv_get(KV_KEY_DS, device_secret, &len);
+    // len = sizeof(pidStr);
+    // aos_kv_get(KV_KEY_PD, pidStr, &len);
+    len = sizeof(pidStr);
+    if (aos_kv_get(KV_KEY_PD, pidStr, &len) == 0) {
+        sprintf(buf,"+LINKKEYCONFIG=\"%s\",\"%s\",\"%s\",\"%s\",\"%d\"\r\n",product_key,device_name,device_secret,product_secret,atoi(pidStr));
+        aos_uart_send(buf,strlen(buf),0);
+        return;
+    }
+    sprintf(buf,"+LINKKEYCONFIG=\"%s\",\"%s\",\"%s\",\"%s\"\r\n",product_key,device_name,device_secret,product_secret);
+    aos_uart_send(buf,strlen(buf),0);
+    aos_uart_send("OK", strlen("OK"), 0);
+}
diff --git a/Living_SDK/platform/mcu/tg7100c/hal_drv/tg7100c_hal/bl_flash.h b/Living_SDK/platform/mcu/tg7100c/hal_drv/tg7100c_hal/bl_flash.h
index 2c07e37d..a38bf403 100644
--- a/Living_SDK/platform/mcu/tg7100c/hal_drv/tg7100c_hal/bl_flash.h
+++ b/Living_SDK/platform/mcu/tg7100c/hal_drv/tg7100c_hal/bl_flash.h
@@ -10,4 +10,17 @@ int bl_flash_config_update(void);
 void* bl_flash_get_flashCfg(void);
 int flash_init(void);
 int bl_flash_read_byxip(uint32_t addr, uint8_t *dst, int len);
+
+//三元组KEY值
+#define KV_KEY_PK "product_key"
+#define KV_KEY_PS "product_secret"
+#define KV_KEY_DN "device_name"
+#define KV_KEY_DS "device_secret"
+#define KV_KEY_PD "product_id"
+#define MAX_KEY_LEN (6)
+//设置三元组到flash
+void handle_set_linkkey_cmd(char *pwbuf, int blen, int argc, char **argv);
+//从flash获取三元组
+void handle_get_linkkey_cmd(char *pwbuf, int blen, int argc, char **argv);
+
 #endif
diff --git a/Living_SDK/platform/mcu/tg7100c/hal_drv/tg7100c_hal/hal_board.c b/Living_SDK/platform/mcu/tg7100c/hal_drv/tg7100c_hal/hal_board.c
index 5ad5c684..aa4dcad9 100644
--- a/Living_SDK/platform/mcu/tg7100c/hal_drv/tg7100c_hal/hal_board.c
+++ b/Living_SDK/platform/mcu/tg7100c/hal_drv/tg7100c_hal/hal_board.c
@@ -106,54 +106,58 @@ static void update_mac_config_with_order(const void *fdt, int offset1, const cha
     uint8_t mac_addr[6];
     static const uint8_t mac_default[] = {0x18, 0xB9, 0x05, 0x88, 0x88, 0x88};
 
-    set = 0;
-    len = strlen(order);
-    for (i = 0; i < MAC_ORDER_ADDR_LEN_MAX && i < len; i++) {
-        switch (order[i]) {
-            case 'B':
-            {
-                if (0 == update_mac_config_get_mac_from_efuse(mac_addr)) {
-                    set = 1;
-                    blog_debug("get MAC from B ready\r\n");
-                    goto break_scan;
-                } else {
-                    blog_debug("get MAC from B failed\r\n");
-                }
-            }
-            break;
-            case 'F':
-            {
-                if (0 == update_mac_config_get_mac_from_dtb(fdt, offset1, mac_addr)) {
-                    set = 1;
-                    blog_debug("get MAC from F ready\r\n");
-                    goto break_scan;
-                } else {
-                    blog_debug("get MAC from F failed\r\n");
-                }
-            }
-            break;
-            case 'M':
-            {
-                if (0 == update_mac_config_get_mac_from_factory(mac_addr)) {
-                    set = 1;
-                    blog_debug("get MAC from M ready\r\n");
-                    goto break_scan;
-                } else {
-                    blog_debug("get MAC from M failed\r\n");
-                }
-            }
-            break;
-            default:
-            {
-                BL_ASSERT(0);
-            }
-        }
-    }
-break_scan:
-    if (0 == set) {
-        blog_info("Using Default MAC address\r\n");
-        memcpy(mac_addr, mac_default, 6);
-    }
+//     set = 0;
+//     len = strlen(order);
+//     for (i = 0; i < MAC_ORDER_ADDR_LEN_MAX && i < len; i++) {
+//         switch (order[i]) {
+//             case 'B':
+//             {
+//                 if (0 == update_mac_config_get_mac_from_efuse(mac_addr)) {
+//                     set = 1;
+//                     blog_debug("get MAC from B ready\r\n");
+//                     goto break_scan;
+//                 } else {
+//                     blog_debug("get MAC from B failed\r\n");
+//                 }
+//             }
+//             break;
+//             case 'F':
+//             {
+//                 if (0 == update_mac_config_get_mac_from_dtb(fdt, offset1, mac_addr)) {
+//                     set = 1;
+//                     blog_debug("get MAC from F ready\r\n");
+//                     goto break_scan;
+//                 } else {
+//                     blog_debug("get MAC from F failed\r\n");
+//                 }
+//             }
+//             break;
+//             case 'M':
+//             {
+//                 if (0 == update_mac_config_get_mac_from_factory(mac_addr)) {
+//                     set = 1;
+//                     blog_debug("get MAC from M ready\r\n");
+//                     goto break_scan;
+//                 } else {
+//                     blog_debug("get MAC from M failed\r\n");
+//                 }
+//             }
+//             break;
+//             default:
+//             {
+//                 BL_ASSERT(0);
+//             }
+//         }
+//     }
+// break_scan:
+//     if (0 == set) {
+//         blog_info("Using Default MAC address\r\n");
+//         memcpy(mac_addr, mac_default, 6);
+//     }
+
+    blog_info("Using Default MAC address\r\n");
+    bl_flash_efuse_read_mac(mac_addr);
+
     //FIXME maybe we should set a different MAC address
 #if 0
     blog_info("Set MAC addrress %02X:%02X:%02X:%02X:%02X:%02X\r\n",
diff --git a/Living_SDK/tools/cli/cli.c b/Living_SDK/tools/cli/cli.c
index 1e1feded..aee230cd 100755
--- a/Living_SDK/tools/cli/cli.c
+++ b/Living_SDK/tools/cli/cli.c
@@ -199,7 +199,9 @@ static int handle_input(char *inbuf)
             }
             break;
 
-        case ' ':
+        case ',':
+            break;
+        case '=':
             if (i > 0 && inbuf[i - 1] == '\\' && stat.inArg)
             {
                 memcpy(&inbuf[i - 1], &inbuf[i],
diff --git a/Products/example/smart_outlet/vendor.c b/Products/example/smart_outlet/vendor.c
index 61d079e7..82397af3 100755
--- a/Products/example/smart_outlet/vendor.c
+++ b/Products/example/smart_outlet/vendor.c
@@ -19,6 +19,7 @@
 #include "device_state_manger.h"
 #include "iot_import_awss.h"
 #include "smart_outlet.h"
+#include "bl_flash.h"
 #if defined(HF_LPT230) || defined(HF_LPT130)
 #include "hfilop/hfilop.h"
 #endif
@@ -211,7 +212,7 @@ int vendor_get_product_key(char *product_key, int *len)
     int ret = -1;
     int pk_len = *len;
 
-    ret = aos_kv_get("linkkit_product_key", product_key, &pk_len);
+    ret = aos_kv_get(KV_KEY_PK, product_key, &pk_len);
 #if defined(HF_LPT230) || defined(HF_LPT130)
     if ((ret != 0)&&((pk = hfilop_layer_get_product_key()) != NULL)) {
         pk_len = strlen(pk);
@@ -243,7 +244,7 @@ int vendor_get_product_secret(char *product_secret, int *len)
     int ret = -1;
     int ps_len = *len;
 
-    ret = aos_kv_get("linkkit_product_secret", product_secret, &ps_len);
+    ret = aos_kv_get(KV_KEY_PS, product_secret, &ps_len);
 #if defined(HF_LPT230) || defined(HF_LPT130)
     if ((ret != 0)&&((ps = hfilop_layer_get_product_secret()) != NULL)) {
         ps_len = strlen(ps);
@@ -275,7 +276,7 @@ int vendor_get_device_name(char *device_name, int *len)
     int ret = -1;
     int dn_len = *len;
 
-    ret = aos_kv_get("linkkit_device_name", device_name, &dn_len);
+    ret = aos_kv_get(KV_KEY_DN, device_name, &dn_len);
 #if defined(HF_LPT230) || defined(HF_LPT130)
     if ((ret != 0)&&((dn = hfilop_layer_get_device_name()) != NULL)) {
         dn_len = strlen(dn);
@@ -307,7 +308,7 @@ int vendor_get_device_secret(char *device_secret, int *len)
     int ret = -1;
     int ds_len = *len;
 
-    ret = aos_kv_get("linkkit_device_secret", device_secret, &ds_len);
+    ret = aos_kv_get(KV_KEY_DS, device_secret, &ds_len);
 #if defined(HF_LPT230) || defined(HF_LPT130)
     if ((ret != 0)&&((ds = hfilop_layer_get_device_secret()) != NULL)) {
         ds_len = strlen(ds);
@@ -339,7 +340,7 @@ int vendor_get_product_id(uint32_t *pid)
     char pidStr[9] = { 0 };
     int len = sizeof(pidStr);
 
-    ret = aos_kv_get("linkkit_product_id", pidStr, &len);
+    ret = aos_kv_get(KV_KEY_PD, pidStr, &len);
     if (ret == 0 && len < sizeof(pidStr)) {
         *pid = atoi(pidStr);
     } else {
diff --git a/README.md b/README.md
index cf60e9d9..99e55533 100755
--- a/README.md
+++ b/README.md
@@ -22,3 +22,34 @@ tg7100c:        tg7100cevb
 RDA5981A: 	hf-lpb130 hf-lpb135 hf-lpt230 hf-lpt130 uno-91h
 rtl8710bn: 	mk3080 mk3092
 asr5502: 	mx1270
+
+
+## 注意
+由于安信可统一了三元组烧录指令，当用需要使用读取三元组时需要将读取API的KEY值统一更换为安信可规定的KEY值，修改如下
+
+获取productKey：
+
+    `aos_kv_get(KV_KEY_PK, product_key, &pk_len);` 
+
+获取ProduceSecret：
+
+    `aos_kv_get(KV_KEY_PS, product_secret, &ps_len);`
+
+获取DeviceName：
+
+    `aos_kv_get(KV_KEY_DN, device_name, &dn_len);`
+
+获取DeviceSecret:
+
+    `aos_kv_get(KV_KEY_DS, device_secret, &ds_len);`
+
+获取ProductID：
+
+    `aos_kv_get(KV_KEY_PD, pidStr, &len);`
+
+安信可烧录三元组AT指令格式：
+
+    AT+LINKKEYCONFIG="ProductID","DeviceName","DeviceSecret","ProduceSecret","ProductID"
+查询三元组指令格式
+    AT+LINKKEYCONFIG?
+
diff --git a/tools/tg7100cevb.sh b/tools/tg7100cevb.sh
index f665ee50..86ee6156 100755
--- a/tools/tg7100cevb.sh
+++ b/tools/tg7100cevb.sh
@@ -31,6 +31,8 @@ function files_cp()
 	cp Living_SDK/platform/mcu/tg7100c/gcc/flash_rom.ld prebuild/lib/
 	rm -f prebuild/lib/$2.a
 
+	cp -rfa Living_SDK/platform/mcu/tg7100c/hal_drv/tg7100c_hal/*.h prebuild/include
+
 	cp -rfa Living_SDK/include/* prebuild/include
 	cp -rfa Living_SDK/utility/cjson/include/* prebuild/include
 	cp -rfa Living_SDK/framework/uOTA/inc/ota_service.h prebuild/include
-- 
2.25.1

